---
AWSTemplateFormatVersion: 2010-09-09
Description: "Create ELB"

# ------------------------------------------------------------#
#  Parameters
# ------------------------------------------------------------#
Parameters:
  LaunchType:
    Type: String
    Default: EC2
    AllowedValues:
      - Fargate
      - EC2
  Vpc:
    Type: AWS::EC2::VPC::Id

  PublicSubnets:
    Type: List<AWS::EC2::Subnet::Id>

Conditions:
  EC2: !Equals [ !Ref LaunchType, "EC2" ]

# ------------------------------------------------------------#
#  Resources
# ------------------------------------------------------------#
Resources:
  # ------------------------------------------------------------#
  #  SecurityGroup
  # ------------------------------------------------------------#
  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-alb
      SecurityGroupIngress:
        - CidrIp: 14.8.17.33/32
          IpProtocol: "TCP"
          FromPort: 80
          ToPort: 80
      VpcId: !Ref Vpc

  # ------------------------------------------------------------#
  #  ALB
  # ------------------------------------------------------------#
  # LoadBalancer
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets: !Ref PublicSubnets
      SecurityGroups:
        - !Ref SecurityGroup

  # Listener
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  # TargetGroup
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: LoadBalancer
    Properties:
      VpcId: !Ref Vpc
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: !If [ EC2, "instance", "ip" ]
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30

  # ListenerRule
  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref LoadBalancerListener
      Priority: 1
      Conditions:
        - Field: path-pattern
          Values:
            - /
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward

# ------------------------------------------------------------#
#  Outputs
# ------------------------------------------------------------#
Outputs:
  TargetGroup:
    Value: !Ref TargetGroup

  ServiceUrl:
    Description: URL of the load balancer for the sample service.
    Value: !Sub http://${LoadBalancer.DNSName}

  SecurityGroup:
    Value: !Ref SecurityGroup